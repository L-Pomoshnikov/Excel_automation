let
    Источник = Excel.Workbook(File.Contents("V:\ДИРЕКЦИЯ ПО ФИНАНСАМ\ПЭУ\ОУО\4.Рейтинг_аптек\Рабочая\Маржинальность с 2018-2020.xlsx"),null, true),
    // Интересуют только нескрытые листы
    // 
    #"ЗАГРУЗКА ДАННЫХ" = Table.SelectRows(Источник, each ([Kind] = "Sheet") and ([Hidden] = false)),
    // Имена столбцов будем брать из марта.2020, поэтому напротив этого месяца ставим 1, в других - 0
    // 
    #"Условный столбец добавлен2" = Table.AddColumn(#"ЗАГРУЗКА ДАННЫХ", "Пользовательский", each if [Name] = "март 2020" then 1 else 0),
    // первым ставим март 2020, затем остальные месяцы
    // 
    #"Сортированные строки1" = Table.Sort(#"Условный столбец добавлен2",{{"Пользовательский", Order.Descending}}),
    // извлекаем данные из каждой вкладки файла "маржинальность"
    #"Развернутый элемент Data" = Table.ExpandTableColumn(#"Сортированные строки1", "Data", {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column20", "Column21", "Column22", "Column23", "Column24", "Column25", "Column26", "Column27", "Column28", "Column29", "Column30", "Column31", "Column32", "Column33", "Column34", "Column35", "Column36", "Column37", "Column38", "Column39", "Column40", "Column41", "Column42", "Column43", "Column44", "Column45", "Column46", "Column47", "Column48", "Column49", "Column50", "Column51", "Column52", "Column53", "Column54", "Column55", "Column56", "Column57", "Column58", "Column59", "Column60", "Column61", "Column62", "Column63", "Column64", "Column65", "Column66", "Column67", "Column68", "Column69", "Column70", "Column71", "Column72", "Column73", "Column74", "Column75", "Column76", "Column77", "Column78", "Column79", "Column80", "Column81", "Column82", "Column83", "Column84", "Column85", "Column86", "Column87", "Column88", "Column89", "Column90", "Column91", "Column92", "Column93", "Column94", "Column95", "Column96", "Column97", "Column98", "Column99", "Column100", "Column101", "Column102", "Column103", "Column104", "Column105", "Column106", "Column107", "Column108", "Column109", "Column110", "Column111", "Column112", "Column113", "Column114", "Column115", "Column116", "Column117", "Column118", "Column119"}, {"Data.Column1", "Data.Column2", "Data.Column3", "Data.Column4", "Data.Column5", "Data.Column6", "Data.Column7", "Data.Column8", "Data.Column9", "Data.Column10", "Data.Column11", "Data.Column12", "Data.Column13", "Data.Column14", "Data.Column15", "Data.Column16", "Data.Column17", "Data.Column18", "Data.Column19", "Data.Column20", "Data.Column21", "Data.Column22", "Data.Column23", "Data.Column24", "Data.Column25", "Data.Column26", "Data.Column27", "Data.Column28", "Data.Column29", "Data.Column30", "Data.Column31", "Data.Column32", "Data.Column33", "Data.Column34", "Data.Column35", "Data.Column36", "Data.Column37", "Data.Column38", "Data.Column39", "Data.Column40", "Data.Column41", "Data.Column42", "Data.Column43", "Data.Column44", "Data.Column45", "Data.Column46", "Data.Column47", "Data.Column48", "Data.Column49", "Data.Column50", "Data.Column51", "Data.Column52", "Data.Column53", "Data.Column54", "Data.Column55", "Data.Column56", "Data.Column57", "Data.Column58", "Data.Column59", "Data.Column60", "Data.Column61", "Data.Column62", "Data.Column63", "Data.Column64", "Data.Column65", "Data.Column66", "Data.Column67", "Data.Column68", "Data.Column69", "Data.Column70", "Data.Column71", "Data.Column72", "Data.Column73", "Data.Column74", "Data.Column75", "Data.Column76", "Data.Column77", "Data.Column78", "Data.Column79", "Data.Column80", "Data.Column81", "Data.Column82", "Data.Column83", "Data.Column84", "Data.Column85", "Data.Column86", "Data.Column87", "Data.Column88", "Data.Column89", "Data.Column90", "Data.Column91", "Data.Column92", "Data.Column93", "Data.Column94", "Data.Column95", "Data.Column96", "Data.Column97", "Data.Column98", "Data.Column99", "Data.Column100", "Data.Column101", "Data.Column102", "Data.Column103", "Data.Column104", "Data.Column105", "Data.Column106", "Data.Column107", "Data.Column108", "Data.Column109", "Data.Column110", "Data.Column111", "Data.Column112", "Data.Column113", "Data.Column114", "Data.Column115", "Data.Column116", "Data.Column117", "Data.Column118", "Data.Column119"}),
    // первые 19 строк - лишние, удаляем
    #"Удаленные верхние строки" = Table.Skip(#"Развернутый элемент Data",19),
    // в качестве заголовков используем соответствующую строку
    // 
    #"Повышенные заголовки" = Table.PromoteHeaders(#"Удаленные верхние строки", [PromoteAllScalars=true]),
    // отбираем строки с данными по аптекам (компания = "АВЕ" или "А5")
    #"Строки с примененным фильтром1" = Table.SelectRows(#"Повышенные заголовки", each ([Компания] = "А5" or [Компания] = "АВЕ")),
    #"Переименованные столбцы" = Table.RenameColumns(#"Строки с примененным фильтром1",{{"март 2020", "Месяц"}, {"Column63", "Торговый сбор апр2020"}, {"Cписание ТЗ", "Cписание ТЗ по СГ"}, {"ПРИХОД ОТ GDP       (за минусом расходов)", "Прочие списания ТЗ"}}),
    #"Измененный тип9" = Table.TransformColumnTypes(#"Переименованные столбцы",{{"Торговый сбор апр2020", type number}}),
    // присваиваем числовой тип данных всем столбцам, содержащим фин. показатели
    // 
    #"Измененный тип" = Table.TransformColumnTypes(#"Измененный тип9",{{"Месяц", type date}, {"К-Н Склада ", type number}, {"Маржинальный доход  (с учетом GDP) (без маркетинга и фин.скидки) ", type number}, {"Маржинальный доход (без GDP) (без маркетинга и фин.скидки)", type number}, {"Маржинальный доход (с учетом GDP) ", type number}, {"Маржинальный доход    (без GDP)  факт ", type number}, {"Себестоимость            (без НДС) (без скидок)", type number}, {"Себестоимость            (без НДС) Склад GDP", type number}, {"Расходы Склада (GDP) (Логистика)", type number}, {"СРН Склада ", type number}, {"Риэлторские услуги", type number}, {"Прочие налоги и сборы", type number}, {"Расходы на инвентаризацию (аптеки)", type number}, {"Оплата услуг тайных покупателей (аптеки)", type number}, {"Расходы на экологию", type number}, {"Прочие расходы аптек - прочее", type number}, {"Штрафы", type number}, {"Транспортные расходы", type number}, {"Расходные материалы и хоз. инвентарь", type number}, {"Уборочные работы", type number}, {"заправка катриджей", type number}, {"Аренда квартир для сотрудников", type number}, {"Аренда рекламного места", type number}, {"Маркетинг. расходы по ИА аптекам ", type number}, {"Безопасность", type number}, {"Расходы на связь и интернет", type number}, {"Прочие расходы на персонал", type number}, {"Содержание оборудования", type number}, {"Содержание мебели", type number}, {"Содержание помещений", type number}, {"Тех поддержка", type number}, {"Расходы на маркетинг и рекламу (POS, Промо, Программы лояльности)", type number}, {"Вывоз ТБО", type number}, {"Расходы на электричество", type number}, {"Оперейтинг ", type number}, {"Коммунальные расходы (в т.ч. Расходы на э/э)", type number}, {"Страхование недвижимости", type number}, {"Субаренда, банкоматы (без НДС) Итого", type number}, {"Субаренда, банкоматы Без ндс ", type number}, {"Субаренда банк (с НДС)", type number}, {"Субаренда нал. (без НДС)", type number}, {"Маркетинговый сбор", type number}, {"Маркетинговые поступления", type number}, {"Торговый сбор", type number}, {"Cписание ТЗ по СГ", type number}, {"Всего расходы", type number}, {"Расходы на маркетинг и рекламу (Total)", type number}, {"Операционные расходы (кроме ФОТ и аренды)", type number}, {"Фин услуги (91.02)", type number}, {"Резервы на премии УА", type number}, {"Налоги ФОТ (управляющие аптекой)", type number}, {"Расходы на оплату труда (управляющие аптекой)", type number}, {"Налоги ФОТ  (аптеки)", type number}, {"Расходы на оплату труда (аптеки)", type number}, {"Себестоимость (без НДС, для расчета марж.)", type number}, {"Выручка ", type number}, {"Выручка (с НДС)  ", type number}, {"Прочие списания ТЗ", type number},{"Аренда всего (без НДС) ", type number}}),
    // пустоты = 0
    #"Замененное значение" = Table.ReplaceValue(#"Измененный тип",null,0,Replacer.ReplaceValue,{"Аренда всего (без НДС) ", "К-Н Склада ", "Выручка (с НДС)  ", "Выручка ", "Себестоимость (без НДС, для расчета марж.)", "Расходы на оплату труда (аптеки)", "Налоги ФОТ  (аптеки)", "Расходы на оплату труда (управляющие аптекой)", "Налоги ФОТ (управляющие аптекой)", "Резервы на премии УА", "Фин услуги (91.02)", "Операционные расходы (кроме ФОТ и аренды)", "Расходы на маркетинг и рекламу (Total)", "Всего расходы", "Cписание ТЗ по СГ", "Торговый сбор", "Маркетинговые поступления", "Маркетинговый сбор", "Субаренда нал. (без НДС)", "Субаренда банк (с НДС)", "Субаренда, банкоматы Без ндс ", "Субаренда, банкоматы (без НДС) Итого", "Страхование недвижимости", "Коммунальные расходы (в т.ч. Расходы на э/э)", "Оперейтинг ", "Расходы на электричество", "Вывоз ТБО", "Торговый сбор апр2020", "Расходы на маркетинг и рекламу (POS, Промо, Программы лояльности)", "Тех поддержка", "Содержание помещений", "Содержание мебели", "Содержание оборудования", "Прочие расходы на персонал", "Расходы на связь и интернет", "Безопасность", "Маркетинг. расходы по ИА аптекам ", "Аренда рекламного места", "Аренда квартир для сотрудников", "заправка катриджей", "Уборочные работы", "Расходные материалы и хоз. инвентарь", "Транспортные расходы", "Штрафы", "Прочие расходы аптек - прочее", "Расходы на экологию", "Оплата услуг тайных покупателей (аптеки)", "Расходы на инвентаризацию (аптеки)", "Прочие налоги и сборы", "Риэлторские услуги", "СРН Склада ", "Расходы Склада (GDP) (Логистика)", "Себестоимость            (без НДС) Склад GDP", "Себестоимость            (без НДС) (без скидок)", "Маржинальный доход    (без GDP)  факт ", "Маржинальный доход (с учетом GDP) ", "Маржинальный доход (без GDP) (без маркетинга и фин.скидки)", "Маржинальный доход  (с учетом GDP) (без маркетинга и фин.скидки) ", "Прочие списания ТЗ"}),
    // удаляем ненужные для анализа столцбы
    #"ДОП. РАСЧЕТЫ" = Table.SelectColumns(#"Замененное значение",{"Месяц", "код 1с", "Фин код", "Регион", "АПТЕКА", "Дата открытия", "Аренда всего (без НДС) ", "Выручка (с НДС)  ", "Выручка ", "Себестоимость (без НДС, для расчета марж.)", "Расходы на оплату труда (аптеки)", "Налоги ФОТ  (аптеки)", "Расходы на оплату труда (управляющие аптекой)", "Налоги ФОТ (управляющие аптекой)", "Резервы на премии УА", "Фин услуги (91.02)", "Операционные расходы (кроме ФОТ и аренды)", "Расходы на маркетинг и рекламу (Total)", "Всего расходы", "Cписание ТЗ по СГ", "Торговый сбор", "Маркетинговые поступления", "Маркетинговый сбор", "Субаренда нал. (без НДС)", "Субаренда банк (с НДС)", "Субаренда, банкоматы Без ндс ", "Субаренда, банкоматы (без НДС) Итого", "Страхование недвижимости", "Торговый сбор апр2020", "Коммунальные расходы (в т.ч. Расходы на э/э)", "Оперейтинг ", "Расходы на электричество", "Вывоз ТБО", "Расходы на маркетинг и рекламу (POS, Промо, Программы лояльности)", "Тех поддержка", "Содержание помещений", "Содержание мебели", "Содержание оборудования", "Прочие расходы на персонал", "Расходы на связь и интернет", "Безопасность", "Маркетинг. расходы по ИА аптекам ", "Аренда рекламного места", "Аренда квартир для сотрудников", "заправка катриджей", "Уборочные работы", "Расходные материалы и хоз. инвентарь", "Транспортные расходы", "Штрафы", "Прочие расходы аптек - прочее", "Расходы на экологию", "Оплата услуг тайных покупателей (аптеки)", "Расходы на инвентаризацию (аптеки)", "Прочие налоги и сборы", "Риэлторские услуги", "Прочие списания ТЗ", "СРН Склада ", "Расходы Склада (GDP) (Логистика)", "Себестоимость            (без НДС) Склад GDP", "Себестоимость            (без НДС) (без скидок)", "Маржинальный доход    (без GDP)  факт ", "Маржинальный доход (с учетом GDP) ", "Маржинальный доход (без GDP) (без маркетинга и фин.скидки)", "Маржинальный доход  (с учетом GDP) (без маркетинга и фин.скидки) ", "К-Н Склада "}),
    #"Дублированный столбец1" = Table.DuplicateColumn(#"ДОП. РАСЧЕТЫ", "СРН Склада ", "Копия СРН Склада "),
    #"Дублированный столбец2" = Table.DuplicateColumn(#"Дублированный столбец1", "Торговый сбор", "Копия Торговый сбор"),
    #"Дублированный столбец3" = Table.DuplicateColumn(#"Дублированный столбец2", "Расходы Склада (GDP) (Логистика)", "Копия Расходы Склада (GDP) (Логистика)"),
    #"-- СПИСАНИЯ ТЗ (аллок)" = Table.RenameColumns(#"Дублированный столбец3",{{"Копия Расходы Склада (GDP) (Логистика)", "Прочие_Списания_ТЗ_(аллок)"}}),
    #"-- ЛОГИСТИКА" = Table.AddColumn(#"-- СПИСАНИЯ ТЗ (аллок)", "Логистика_PL", each if [Месяц] < #date(2020, 4, 1) then [#"Расходы Склада (GDP) (Логистика)"] else 0),
    #"-- СТОРНО 73 СЧ. апр 2020" = Table.RenameColumns(#"-- ЛОГИСТИКА",{{"Копия Торговый сбор", "Сторно_73сч_2020_апр"}}),
    #"-- РЕЗЕРВЫ МСФО апр 2020" = Table.RenameColumns(#"-- СТОРНО 73 СЧ. апр 2020",{{"Копия СРН Склада ", "Резервы МСФО апр2020"}}),
    #"-- СПИСАНИЕ апр 2020" = Table.AddColumn(#"-- РЕЗЕРВЫ МСФО апр 2020", "Списание ТЗ апр2020", each [Cписание ТЗ по СГ] + [Сторно_73сч_2020_апр] + [Резервы МСФО апр2020] + [Прочие списания ТЗ] +[#"Прочие_Списания_ТЗ_(аллок)"]),
    #"-- СПИСАНИЯ ТЗ ИТОГ" = Table.AddColumn(#"-- СПИСАНИЕ апр 2020", "Списания_PL", each if [Месяц] < #date(2020, 4, 1) then [Cписание ТЗ по СГ] else [Списание ТЗ апр2020]),
    #"Измененный тип10" = Table.TransformColumnTypes(#"-- СПИСАНИЯ ТЗ ИТОГ",{{"Списания_PL", type number}}),
    // ФОТ итого = ФОТ РПС + ФОТ УА + все отчисления + резервы
    #"-- ФОТ ИТОГ" = Table.AddColumn(#"Измененный тип10", "ФОТ_PL", each [#"Расходы на оплату труда (аптеки)"]+[#"Налоги ФОТ  (аптеки)"]+[#"Расходы на оплату труда (управляющие аптекой)"]+[#"Налоги ФОТ (управляющие аптекой)"]+[Резервы на премии УА]),
    #"Измененный тип11" = Table.TransformColumnTypes(#"-- ФОТ ИТОГ",{{"ФОТ_PL", type number}}),
    // Себестоимость с учетом СРН склада
    #"-- СЕБЕСТОИМОСТЬ с уч СРН" = Table.AddColumn(#"Измененный тип11", "Себестоимость + срн", each [#"Себестоимость (без НДС, для расчета марж.)"]-[#"СРН Склада "]),
    #"-- СЕБЕСТОИМОСТЬ ИТОГ" = Table.AddColumn(#"-- СЕБЕСТОИМОСТЬ с уч СРН", "Себестоимость полная", each if [Месяц] < #date(2020, 4, 1) then [#"Себестоимость + срн"] else [#"Себестоимость (без НДС, для расчета марж.)"]),
    #"Измененный тип8" = Table.TransformColumnTypes(#"-- СЕБЕСТОИМОСТЬ ИТОГ",{{"Себестоимость полная", type number}}),
    // прочие по 2018году
    #"-- ПРОЧИЕ 2018" = Table.AddColumn(#"Измененный тип8", "Прочие_PL_2018", each [Торговый сбор]),
    // прочие по 2019г (больше статей, чем в 2018)
    #"-- ПРОЧИЕ 2019" = Table.AddColumn(#"-- ПРОЧИЕ 2018", "Прочие_PL_2019", each [Торговый сбор]+[Штрафы]+[#"Прочие расходы аптек - прочее"]+[#"Оплата услуг тайных покупателей (аптеки)"]+[#"Расходы на инвентаризацию (аптеки)"]+[Прочие налоги и сборы]+[Риэлторские услуги]),
    #"-- ПРОЧИЕ 2020" = Table.AddColumn(#"-- ПРОЧИЕ 2019", "Прочие_PL_апр2020", each [Торговый сбор апр2020]+[Штрафы]+[#"Прочие расходы аптек - прочее"]+[#"Оплата услуг тайных покупателей (аптеки)"]+[#"Расходы на инвентаризацию (аптеки)"]+[Прочие налоги и сборы]+[Риэлторские услуги]),
    // Прочие итого, с учетом года
    #"-- ПРОЧИЕ ИТОГ" = Table.AddColumn(#"-- ПРОЧИЕ 2020", "Прочие_PL", each if [Месяц] < #date(2019, 1, 1) then [Прочие_PL_2018] else if [Месяц] < #date(2020, 4, 1) then [Прочие_PL_2019] else [Прочие_PL_апр2020]),
    // присваиваем числово тип созданным пользовательским столбцам
    #"Измененный тип1" = Table.TransformColumnTypes(#"-- ПРОЧИЕ ИТОГ",{{"Прочие_PL", type number}}),
    // факт
    #"-- EBITDA" = Table.AddColumn(#"Измененный тип1", "EBITDA", each if [Месяц] < #date(2020, 4, 1) then [#"Маржинальный доход (с учетом GDP) "] else [#"Маржинальный доход    (без GDP)  факт "]),
    #"Измененный тип7" = Table.TransformColumnTypes(#"-- EBITDA",{{"EBITDA", type number}}),
    #"Другие удаленные столбцы1" = Table.SelectColumns(#"Измененный тип7",{"Месяц", "код 1с", "Фин код", "Аренда всего (без НДС) ", "Выручка ", "Фин услуги (91.02)", "Операционные расходы (кроме ФОТ и аренды)", "Маркетинговые поступления", "Субаренда, банкоматы (без НДС) Итого", "К-Н Склада ", "Логистика_PL", "Списания_PL", "ФОТ_PL", "Себестоимость полная", "Прочие_PL", "EBITDA"}),
    #"Переупорядоченные столбцы" = Table.ReorderColumns(#"Другие удаленные столбцы1",{"Месяц", "код 1с", "Фин код", "Выручка ", "Себестоимость полная", "Субаренда, банкоматы (без НДС) Итого", "Маркетинговые поступления", "К-Н Склада ", "Аренда всего (без НДС) ", "ФОТ_PL", "Фин услуги (91.02)", "Операционные расходы (кроме ФОТ и аренды)", "Логистика_PL", "Прочие_PL", "EBITDA"}),

    #"Переименованные столбцы2" = Table.RenameColumns(#"Переупорядоченные столбцы",{
        {"Выручка ", "Выручка (без НДС)///P0120_01"},
        {"Себестоимость полная", "Себестоимость///P0320_01"},
        {"Субаренда, банкоматы (без НДС) Итого", "Субаренда///P0110_011"},
        {"Маркетинговые поступления", "Маркетинговые поступления///P0210"},
        {"К-Н Склада ", "Финансовая скидка///P0211"},
        {"Аренда всего (без НДС) ", "Аренда///P0510_01"},
        {"ФОТ_PL", "ФОТ персонала аптек///P0520"},
        {"Фин услуги (91.02)", "Финансовые услуги///P0560"},
        {"Операционные расходы (кроме ФОТ и аренды)", "Операционные расходы///P0540"},   
        {"Логистика_PL", "Логистика///P0410_022"},   
        {"Прочие_PL", "Прочие расходы///P0580"},
        {"Списания_PL", "Списания_PL///P0570"}    
        }),

    #"Другие столбцы с отмененным свертыванием" = Table.UnpivotOtherColumns(#"Переименованные столбцы2", {"Фин код", "код 1с", "Месяц"}, "Атрибут", "Значение"),
    #"Переименованные столбцы1" = Table.RenameColumns(#"Другие столбцы с отмененным свертыванием",{{"Атрибут", "Фин.показатель"}, {"Значение", "Сумма"}}),
    #"Вставлено: год" = Table.AddColumn(#"Переименованные столбцы1", "Год", each Date.Year([Месяц]), Int64.Type),
    #"Вставлено: месяц" = Table.AddColumn(#"Вставлено: год", "Месяц.1", each Date.Month([Месяц]), Int64.Type),
    #"Измененный тип2" = Table.TransformColumnTypes(#"Вставлено: месяц",{{"Год", type text}, {"Месяц.1", type text}}),
    #"Дублированный столбец" = Table.DuplicateColumn(#"Измененный тип2", "Месяц.1", "Копия Месяц.1"),
    #"Вычисленная длина текста" = Table.TransformColumns(Table.TransformColumnTypes(#"Дублированный столбец", {{"Копия Месяц.1", type text}}, "ru-RU"),{{"Копия Месяц.1", Text.Length, Int64.Type}}),
    #"Условный столбец добавлен1" = Table.AddColumn(#"Вычисленная длина текста", "Пользовательский", each if [Копия Месяц.1] = 2 then [Месяц.1] else "0" & [Месяц.1]),
    #"Строки с примененным фильтром2" = Table.SelectRows(#"Условный столбец добавлен1", each true),
    #"Объединенные столбцы" = Table.CombineColumns(#"Строки с примененным фильтром2",{"Год", "Пользовательский"},Combiner.CombineTextByDelimiter("", QuoteStyle.None),"Год/Мес"),
    #"Удаленные столбцы1" = Table.RemoveColumns(#"Объединенные столбцы",{"Месяц.1", "Копия Месяц.1"}),
    #"Переупорядоченные столбцы1" = Table.ReorderColumns(#"Удаленные столбцы1",{"Месяц", "Год/Мес", "код 1с", "Фин код", "Фин.показатель", "Сумма"}),
    #"Разделить столбец по разделителю" = Table.SplitColumn(#"Переупорядоченные столбцы1", "Фин.показатель", Splitter.SplitTextByDelimiter("///", QuoteStyle.Csv), {"Фин.показатель.1", "Фин.показатель.2"}),
    #"Измененный тип3" = Table.TransformColumnTypes(#"Разделить столбец по разделителю",{{"Фин.показатель.1", type text}, {"Фин.показатель.2", type text}}),
    #"Переименованные столбцы3" = Table.RenameColumns(#"Измененный тип3",{{"Фин.показатель.1", "Фин.показатель"}, {"Фин.показатель.2", "код статьи"}}),
    #"Измененный тип4" = Table.TransformColumnTypes(#"Переименованные столбцы3",{{"код 1с", Int64.Type}, {"Год/Мес", Int64.Type}}),
    #"Условный столбец добавлен3" = Table.AddColumn(#"Измененный тип4", "Пользовательский", each if Text.Contains([Фин.показатель], "Выручка (без НДС)") then 1 else if Text.Contains([Фин.показатель], "Субаренда") then 1 else if Text.Contains([Фин.показатель], "Маркетинговые поступления") then 1 else if Text.Contains([Фин.показатель], "Финансовая скидка") then 1 else if Text.Contains([Фин.показатель], "EBITDA") then 1 else -1),
    #"Измененный тип5" = Table.TransformColumnTypes(#"Условный столбец добавлен3",{{"Пользовательский", Int64.Type}}),
    #"Добавлен пользовательский объект4" = Table.AddColumn(#"Измененный тип5", "Значение", each [Сумма] * [Пользовательский]),
    #"Измененный тип6" = Table.TransformColumnTypes(#"Добавлен пользовательский объект4",{{"Значение", type number}}),
    #"Строки с примененным фильтром3" = Table.SelectRows(#"Измененный тип6", each [Значение] <> 0),
    #"Строки с примененным фильтром" = Table.SelectRows(#"Строки с примененным фильтром3", each [#"Год/Мес"] > 202112)
in
    #"Строки с примененным фильтром"